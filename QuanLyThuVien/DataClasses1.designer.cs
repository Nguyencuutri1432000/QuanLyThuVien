#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyThuVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_THUVIEN")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDOCGIA(DOCGIA instance);
    partial void UpdateDOCGIA(DOCGIA instance);
    partial void DeleteDOCGIA(DOCGIA instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertLOAISACH(LOAISACH instance);
    partial void UpdateLOAISACH(LOAISACH instance);
    partial void DeleteLOAISACH(LOAISACH instance);
    partial void InsertMUONTRASACH(MUONTRASACH instance);
    partial void UpdateMUONTRASACH(MUONTRASACH instance);
    partial void DeleteMUONTRASACH(MUONTRASACH instance);
    partial void InsertNHAXUATBAN(NHAXUATBAN instance);
    partial void UpdateNHAXUATBAN(NHAXUATBAN instance);
    partial void DeleteNHAXUATBAN(NHAXUATBAN instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    partial void InsertTACGIA(TACGIA instance);
    partial void UpdateTACGIA(TACGIA instance);
    partial void DeleteTACGIA(TACGIA instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QuanLyThuVien.Properties.Settings.Default.QL_THUVIENConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DOCGIA> DOCGIAs
		{
			get
			{
				return this.GetTable<DOCGIA>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<LOAISACH> LOAISACHes
		{
			get
			{
				return this.GetTable<LOAISACH>();
			}
		}
		
		public System.Data.Linq.Table<MUONTRASACH> MUONTRASACHes
		{
			get
			{
				return this.GetTable<MUONTRASACH>();
			}
		}
		
		public System.Data.Linq.Table<NHAXUATBAN> NHAXUATBANs
		{
			get
			{
				return this.GetTable<NHAXUATBAN>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
		
		public System.Data.Linq.Table<TACGIA> TACGIAs
		{
			get
			{
				return this.GetTable<TACGIA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCGIA")]
	public partial class DOCGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADG;
		
		private string _TENDG;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private string _LIENHE;
		
		private int _QUYEN;
		
		private int _MUON;
		
		private int _TRA;
		
		private int _DOITUONG;
		
		private int _SOGIAHAN;
		
		private EntitySet<MUONTRASACH> _MUONTRASACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADGChanging(int value);
    partial void OnMADGChanged();
    partial void OnTENDGChanging(string value);
    partial void OnTENDGChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnLIENHEChanging(string value);
    partial void OnLIENHEChanged();
    partial void OnQUYENChanging(int value);
    partial void OnQUYENChanged();
    partial void OnMUONChanging(int value);
    partial void OnMUONChanged();
    partial void OnTRAChanging(int value);
    partial void OnTRAChanged();
    partial void OnDOITUONGChanging(int value);
    partial void OnDOITUONGChanged();
    partial void OnSOGIAHANChanging(int value);
    partial void OnSOGIAHANChanged();
    #endregion
		
		public DOCGIA()
		{
			this._MUONTRASACHes = new EntitySet<MUONTRASACH>(new Action<MUONTRASACH>(this.attach_MUONTRASACHes), new Action<MUONTRASACH>(this.detach_MUONTRASACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADG
		{
			get
			{
				return this._MADG;
			}
			set
			{
				if ((this._MADG != value))
				{
					this.OnMADGChanging(value);
					this.SendPropertyChanging();
					this._MADG = value;
					this.SendPropertyChanged("MADG");
					this.OnMADGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDG", DbType="NVarChar(50)")]
		public string TENDG
		{
			get
			{
				return this._TENDG;
			}
			set
			{
				if ((this._TENDG != value))
				{
					this.OnTENDGChanging(value);
					this.SendPropertyChanging();
					this._TENDG = value;
					this.SendPropertyChanged("TENDG");
					this.OnTENDGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIENHE", DbType="NVarChar(50)")]
		public string LIENHE
		{
			get
			{
				return this._LIENHE;
			}
			set
			{
				if ((this._LIENHE != value))
				{
					this.OnLIENHEChanging(value);
					this.SendPropertyChanging();
					this._LIENHE = value;
					this.SendPropertyChanged("LIENHE");
					this.OnLIENHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="Int NOT NULL")]
		public int QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUON", DbType="Int NOT NULL")]
		public int MUON
		{
			get
			{
				return this._MUON;
			}
			set
			{
				if ((this._MUON != value))
				{
					this.OnMUONChanging(value);
					this.SendPropertyChanging();
					this._MUON = value;
					this.SendPropertyChanged("MUON");
					this.OnMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRA", DbType="Int NOT NULL")]
		public int TRA
		{
			get
			{
				return this._TRA;
			}
			set
			{
				if ((this._TRA != value))
				{
					this.OnTRAChanging(value);
					this.SendPropertyChanging();
					this._TRA = value;
					this.SendPropertyChanged("TRA");
					this.OnTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOITUONG", DbType="Int NOT NULL")]
		public int DOITUONG
		{
			get
			{
				return this._DOITUONG;
			}
			set
			{
				if ((this._DOITUONG != value))
				{
					this.OnDOITUONGChanging(value);
					this.SendPropertyChanging();
					this._DOITUONG = value;
					this.SendPropertyChanged("DOITUONG");
					this.OnDOITUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOGIAHAN", DbType="Int NOT NULL")]
		public int SOGIAHAN
		{
			get
			{
				return this._SOGIAHAN;
			}
			set
			{
				if ((this._SOGIAHAN != value))
				{
					this.OnSOGIAHANChanging(value);
					this.SendPropertyChanging();
					this._SOGIAHAN = value;
					this.SendPropertyChanged("SOGIAHAN");
					this.OnSOGIAHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_MUONTRASACH", Storage="_MUONTRASACHes", ThisKey="MADG", OtherKey="MADG")]
		public EntitySet<MUONTRASACH> MUONTRASACHes
		{
			get
			{
				return this._MUONTRASACHes;
			}
			set
			{
				this._MUONTRASACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = this;
		}
		
		private void detach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENTK;
		
		private string _HOTEN;
		
		private string _MATKHAU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public TAIKHOAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="NChar(10)")]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(20)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISACH")]
	public partial class LOAISACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAISACH()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISACH_SACH", Storage="_SACHes", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.LOAISACH = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.LOAISACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUONTRASACH")]
	public partial class MUONTRASACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADG;
		
		private int _MASH;
		
		private System.DateTime _NGAYMUON;
		
		private System.Nullable<System.DateTime> _NGAYTRA;
		
		private bool _DATRA;
		
		private int _LANMUON;
		
		private EntityRef<DOCGIA> _DOCGIA;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADGChanging(int value);
    partial void OnMADGChanged();
    partial void OnMASHChanging(int value);
    partial void OnMASHChanged();
    partial void OnNGAYMUONChanging(System.DateTime value);
    partial void OnNGAYMUONChanged();
    partial void OnNGAYTRAChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTRAChanged();
    partial void OnDATRAChanging(bool value);
    partial void OnDATRAChanged();
    partial void OnLANMUONChanging(int value);
    partial void OnLANMUONChanged();
    #endregion
		
		public MUONTRASACH()
		{
			this._DOCGIA = default(EntityRef<DOCGIA>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADG
		{
			get
			{
				return this._MADG;
			}
			set
			{
				if ((this._MADG != value))
				{
					if (this._DOCGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADGChanging(value);
					this.SendPropertyChanging();
					this._MADG = value;
					this.SendPropertyChanged("MADG");
					this.OnMADGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASH
		{
			get
			{
				return this._MASH;
			}
			set
			{
				if ((this._MASH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASHChanging(value);
					this.SendPropertyChanging();
					this._MASH = value;
					this.SendPropertyChanged("MASH");
					this.OnMASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYMUON", DbType="Date NOT NULL")]
		public System.DateTime NGAYMUON
		{
			get
			{
				return this._NGAYMUON;
			}
			set
			{
				if ((this._NGAYMUON != value))
				{
					this.OnNGAYMUONChanging(value);
					this.SendPropertyChanging();
					this._NGAYMUON = value;
					this.SendPropertyChanged("NGAYMUON");
					this.OnNGAYMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRA", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTRA
		{
			get
			{
				return this._NGAYTRA;
			}
			set
			{
				if ((this._NGAYTRA != value))
				{
					this.OnNGAYTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRA = value;
					this.SendPropertyChanged("NGAYTRA");
					this.OnNGAYTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATRA", DbType="Bit NOT NULL")]
		public bool DATRA
		{
			get
			{
				return this._DATRA;
			}
			set
			{
				if ((this._DATRA != value))
				{
					this.OnDATRAChanging(value);
					this.SendPropertyChanging();
					this._DATRA = value;
					this.SendPropertyChanged("DATRA");
					this.OnDATRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANMUON", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LANMUON
		{
			get
			{
				return this._LANMUON;
			}
			set
			{
				if ((this._LANMUON != value))
				{
					this.OnLANMUONChanging(value);
					this.SendPropertyChanging();
					this._LANMUON = value;
					this.SendPropertyChanged("LANMUON");
					this.OnLANMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_MUONTRASACH", Storage="_DOCGIA", ThisKey="MADG", OtherKey="MADG", IsForeignKey=true)]
		public DOCGIA DOCGIA
		{
			get
			{
				return this._DOCGIA.Entity;
			}
			set
			{
				DOCGIA previousValue = this._DOCGIA.Entity;
				if (((previousValue != value) 
							|| (this._DOCGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCGIA.Entity = null;
						previousValue.MUONTRASACHes.Remove(this);
					}
					this._DOCGIA.Entity = value;
					if ((value != null))
					{
						value.MUONTRASACHes.Add(this);
						this._MADG = value.MADG;
					}
					else
					{
						this._MADG = default(int);
					}
					this.SendPropertyChanged("DOCGIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_MUONTRASACH", Storage="_SACH", ThisKey="MASH", OtherKey="MASH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.MUONTRASACHes.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.MUONTRASACHes.Add(this);
						this._MASH = value.MASH;
					}
					else
					{
						this._MASH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAXUATBAN")]
	public partial class NHAXUATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANXB;
		
		private string _TENNXB;
		
		private string _DCNXB;
		
		private string _DTNXB;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANXBChanging(int value);
    partial void OnMANXBChanged();
    partial void OnTENNXBChanging(string value);
    partial void OnTENNXBChanged();
    partial void OnDCNXBChanging(string value);
    partial void OnDCNXBChanged();
    partial void OnDTNXBChanging(string value);
    partial void OnDTNXBChanged();
    #endregion
		
		public NHAXUATBAN()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANXB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANXB
		{
			get
			{
				return this._MANXB;
			}
			set
			{
				if ((this._MANXB != value))
				{
					this.OnMANXBChanging(value);
					this.SendPropertyChanging();
					this._MANXB = value;
					this.SendPropertyChanged("MANXB");
					this.OnMANXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNXB", DbType="NVarChar(50)")]
		public string TENNXB
		{
			get
			{
				return this._TENNXB;
			}
			set
			{
				if ((this._TENNXB != value))
				{
					this.OnTENNXBChanging(value);
					this.SendPropertyChanging();
					this._TENNXB = value;
					this.SendPropertyChanged("TENNXB");
					this.OnTENNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCNXB", DbType="NVarChar(50)")]
		public string DCNXB
		{
			get
			{
				return this._DCNXB;
			}
			set
			{
				if ((this._DCNXB != value))
				{
					this.OnDCNXBChanging(value);
					this.SendPropertyChanging();
					this._DCNXB = value;
					this.SendPropertyChanged("DCNXB");
					this.OnDCNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTNXB", DbType="NVarChar(50)")]
		public string DTNXB
		{
			get
			{
				return this._DTNXB;
			}
			set
			{
				if ((this._DTNXB != value))
				{
					this.OnDTNXBChanging(value);
					this.SendPropertyChanging();
					this._DTNXB = value;
					this.SendPropertyChanged("DTNXB");
					this.OnDTNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_SACHes", ThisKey="MANXB", OtherKey="MANXB")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASH;
		
		private string _TENSH;
		
		private int _MATG;
		
		private System.Nullable<int> _NAMXB;
		
		private int _MANXB;
		
		private int _MALOAI;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<int> _SOLUONGCON;
		
		private EntitySet<MUONTRASACH> _MUONTRASACHes;
		
		private EntityRef<LOAISACH> _LOAISACH;
		
		private EntityRef<NHAXUATBAN> _NHAXUATBAN;
		
		private EntityRef<TACGIA> _TACGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASHChanging(int value);
    partial void OnMASHChanged();
    partial void OnTENSHChanging(string value);
    partial void OnTENSHChanged();
    partial void OnMATGChanging(int value);
    partial void OnMATGChanged();
    partial void OnNAMXBChanging(System.Nullable<int> value);
    partial void OnNAMXBChanged();
    partial void OnMANXBChanging(int value);
    partial void OnMANXBChanged();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnSOLUONGCONChanging(System.Nullable<int> value);
    partial void OnSOLUONGCONChanged();
    #endregion
		
		public SACH()
		{
			this._MUONTRASACHes = new EntitySet<MUONTRASACH>(new Action<MUONTRASACH>(this.attach_MUONTRASACHes), new Action<MUONTRASACH>(this.detach_MUONTRASACHes));
			this._LOAISACH = default(EntityRef<LOAISACH>);
			this._NHAXUATBAN = default(EntityRef<NHAXUATBAN>);
			this._TACGIA = default(EntityRef<TACGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASH
		{
			get
			{
				return this._MASH;
			}
			set
			{
				if ((this._MASH != value))
				{
					this.OnMASHChanging(value);
					this.SendPropertyChanging();
					this._MASH = value;
					this.SendPropertyChanged("MASH");
					this.OnMASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSH", DbType="NVarChar(50)")]
		public string TENSH
		{
			get
			{
				return this._TENSH;
			}
			set
			{
				if ((this._TENSH != value))
				{
					this.OnTENSHChanging(value);
					this.SendPropertyChanging();
					this._TENSH = value;
					this.SendPropertyChanged("TENSH");
					this.OnTENSHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATG", DbType="Int NOT NULL")]
		public int MATG
		{
			get
			{
				return this._MATG;
			}
			set
			{
				if ((this._MATG != value))
				{
					if (this._TACGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATGChanging(value);
					this.SendPropertyChanging();
					this._MATG = value;
					this.SendPropertyChanged("MATG");
					this.OnMATGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMXB", DbType="Int")]
		public System.Nullable<int> NAMXB
		{
			get
			{
				return this._NAMXB;
			}
			set
			{
				if ((this._NAMXB != value))
				{
					this.OnNAMXBChanging(value);
					this.SendPropertyChanging();
					this._NAMXB = value;
					this.SendPropertyChanged("NAMXB");
					this.OnNAMXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANXB", DbType="Int NOT NULL")]
		public int MANXB
		{
			get
			{
				return this._MANXB;
			}
			set
			{
				if ((this._MANXB != value))
				{
					if (this._NHAXUATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANXBChanging(value);
					this.SendPropertyChanging();
					this._MANXB = value;
					this.SendPropertyChanged("MANXB");
					this.OnMANXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Int NOT NULL")]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAISACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGCON", DbType="Int")]
		public System.Nullable<int> SOLUONGCON
		{
			get
			{
				return this._SOLUONGCON;
			}
			set
			{
				if ((this._SOLUONGCON != value))
				{
					this.OnSOLUONGCONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGCON = value;
					this.SendPropertyChanged("SOLUONGCON");
					this.OnSOLUONGCONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_MUONTRASACH", Storage="_MUONTRASACHes", ThisKey="MASH", OtherKey="MASH")]
		public EntitySet<MUONTRASACH> MUONTRASACHes
		{
			get
			{
				return this._MUONTRASACHes;
			}
			set
			{
				this._MUONTRASACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISACH_SACH", Storage="_LOAISACH", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAISACH LOAISACH
		{
			get
			{
				return this._LOAISACH.Entity;
			}
			set
			{
				LOAISACH previousValue = this._LOAISACH.Entity;
				if (((previousValue != value) 
							|| (this._LOAISACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISACH.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._LOAISACH.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(int);
					}
					this.SendPropertyChanged("LOAISACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_NHAXUATBAN", ThisKey="MANXB", OtherKey="MANXB", IsForeignKey=true)]
		public NHAXUATBAN NHAXUATBAN
		{
			get
			{
				return this._NHAXUATBAN.Entity;
			}
			set
			{
				NHAXUATBAN previousValue = this._NHAXUATBAN.Entity;
				if (((previousValue != value) 
							|| (this._NHAXUATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAXUATBAN.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._NHAXUATBAN.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._MANXB = value.MANXB;
					}
					else
					{
						this._MANXB = default(int);
					}
					this.SendPropertyChanged("NHAXUATBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_SACH", Storage="_TACGIA", ThisKey="MATG", OtherKey="MATG", IsForeignKey=true)]
		public TACGIA TACGIA
		{
			get
			{
				return this._TACGIA.Entity;
			}
			set
			{
				TACGIA previousValue = this._TACGIA.Entity;
				if (((previousValue != value) 
							|| (this._TACGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TACGIA.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._TACGIA.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._MATG = value.MATG;
					}
					else
					{
						this._MATG = default(int);
					}
					this.SendPropertyChanged("TACGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TACGIA")]
	public partial class TACGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATG;
		
		private string _TENTG;
		
		private string _DIACHI;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATGChanging(int value);
    partial void OnMATGChanged();
    partial void OnTENTGChanging(string value);
    partial void OnTENTGChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public TACGIA()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATG
		{
			get
			{
				return this._MATG;
			}
			set
			{
				if ((this._MATG != value))
				{
					this.OnMATGChanging(value);
					this.SendPropertyChanging();
					this._MATG = value;
					this.SendPropertyChanged("MATG");
					this.OnMATGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTG", DbType="NVarChar(50)")]
		public string TENTG
		{
			get
			{
				return this._TENTG;
			}
			set
			{
				if ((this._TENTG != value))
				{
					this.OnTENTGChanging(value);
					this.SendPropertyChanging();
					this._TENTG = value;
					this.SendPropertyChanged("TENTG");
					this.OnTENTGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_SACH", Storage="_SACHes", ThisKey="MATG", OtherKey="MATG")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = null;
		}
	}
}
#pragma warning restore 1591
